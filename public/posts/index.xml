<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" 
  xmlns:content="http://purl.org/rss/1.0/modules/content/" 
  xmlns:dc="http://purl.org/dc/elements/1.1/" 
  xmlns:atom="http://www.w3.org/2005/Atom" 
  xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" 
  xmlns:media="http://search.yahoo.com/mrss/">
  <channel>
    <title>Posts on pxlman</title>
    <link>http://localhost:1313/posts/</link>
    <description>Recent content in Posts on pxlman</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <managingEditor>ahmed.kotb.7573@gmail.com (Ahmed Ashraf)</managingEditor>
    <webMaster>ahmed.kotb.7573@gmail.com (Ahmed Ashraf)</webMaster>
    <lastBuildDate>Mon, 26 Aug 2024 01:38:14 +0300</lastBuildDate>
    <sy:updatePeriod>weekly</sy:updatePeriod>
    
        <atom:link href="http://localhost:1313/posts/index.xml" rel="self" type="application/rss+xml" />
    

      
      <item>
        <title>Blind SQLi Portswigger Conditional Responses</title>
        <link>http://localhost:1313/posts/blind-sqli-portswigger-conditional-responses/</link>
        <pubDate>Mon, 26 Aug 2024 01:38:14 +0300</pubDate>
        <author>ahmed.kotb.7573@gmail.com (Ahmed Ashraf)</author>
        <atom:modified>Mon, 26 Aug 2024 01:38:14 +0300</atom:modified>
        <guid>http://localhost:1313/posts/blind-sqli-portswigger-conditional-responses/</guid>
        <description>&lt;p&gt;&lt;a href=&#34;https://portswigger.net/web-security/learning-paths/sql-injection/sql-injection-exploiting-blind-sql-injection-by-triggering-conditional-responses/sql-injection/blind/lab-conditional-responses&#34;&gt;Portswigger lab&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;the-lab-description&#34;&gt;The Lab description&lt;/h1&gt;
&lt;p&gt;This lab contains a blind SQL injection vulnerability. The application uses a tracking cookie for analytics, and performs a SQL query containing the value of the submitted cookie.&lt;/p&gt;
&lt;p&gt;The results of the SQL query are not returned, and no error messages are displayed. But the application includes a &lt;code&gt;Welcome back&lt;/code&gt; message in the page if the query returns any rows.&lt;/p&gt;
&lt;p&gt;The database contains a different table called &lt;code&gt;users&lt;/code&gt;, with columns called &lt;code&gt;username&lt;/code&gt; and &lt;code&gt;password&lt;/code&gt;. You need to exploit the blind SQL injection vulnerability to find out the password of the &lt;code&gt;administrator&lt;/code&gt; user.&lt;/p&gt;</description>
        
        <dc:creator>Ahmed Ashraf</dc:creator>
        
        
        
        
          
            
              <category>sqli</category>
            
          
            
              <category>portswigger</category>
            
          
            
              <category>python</category>
            
          
            
              <category>web</category>
            
          
        
        
        
      </item>
      

    
  </channel>
</rss>
